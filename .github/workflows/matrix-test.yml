on:
  push:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            container_image: quay.io/pypa/manylinux_2_28_x86_64
            install_rustup: true
          # this doesn't work: GHA doesn't do ARM64 emulation via qemu-user-static
          - target: aarch64-unknown-linux-gnu
            container_image: quay.io/pypa/manylinux_2_28_aarch64
            install_rustup: true
          - target: aarch64-unknown-linux-gnu,x86_64-unknown-linux-gnu
            container_image: quay.io/pypa/manylinux_2_28_x86_64
            install_rustup: true
            install_cargo_zigbuild_for_almalinux: true
          - target: x86_64-pc-windows-msvc
            container_image: messense/cargo-xwin
          - target: aarch64-pc-windows-msvc
            container_image: messense/cargo-xwin
          - target: x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu
            runs-on: ubuntu-latest
            install_cargo_zigbuild: true
          - target: x86_64-apple-darwin,aarch64-apple-darwin
            runs-on: macos-latest
    runs-on: ${{ matrix.runs-on || 'ubuntu-latest' }}
    container: ${{ matrix.container_image || '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        if: ${{ matrix.install_rustup }}
      - name: Install cargo-zigbuild
        if: ${{ matrix.install_cargo_zigbuild }}
        shell: bash
        run: pip install cargo-zigbuild
      - name: Install cargo-zigbuild for alma linux
        if: ${{ matrix.install_cargo_zigbuild_for_almalinux }}
        shell: bash
        run: |
          dnf install --assumeyes python3-pip
          pip3 install --upgrade pip
          pip3 install cargo-zigbuild
          cargo-zigbuild --version
      - name: Install cargo-dist
        shell: bash
        run: "curl --proto '=https' --tlsv1.2 -LsSf https://dl.bearcove.cloud/dump/dist-cross/cargo-dist-installer.sh | sh"
      - name: Build local artifacts
        run: cargo dist build --artifacts local --target ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: target/distrib
